{"code":"!function(e){var o={};function t(n){if(o[n])return o[n].exports;var r=o[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=o,t.d=function(e,o,n){t.o(e,o)||Object.defineProperty(e,o,{configurable:!1,enumerable:!0,get:n})},t.r=function(e){Object.defineProperty(e,\"__esModule\",{value:!0})},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,\"a\",o),o},t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},t.p=\"\",t(t.s=0)}([function(e,o){throw new Error(\"Module build failed: Error: ts-loader was supplied with an unexpected loader option: presets\\n\\nPlease take a look at the options you are supplying; the following are valid options:\\nsilent / logLevel / logInfoToStdOut / instance / compiler / context / configFile / transpileOnly / ignoreDiagnostics / errorFormatter / colors / compilerOptions / appendTsSuffixTo / appendTsxSuffixTo / onlyCompileBundledFiles / happyPackMode / getCustomTransformers / reportFiles / experimentalWatchApi / allowTsInNodeModules\\n\\n    at validateLoaderOptions (C:\\\\Users\\\\Administrator\\\\Desktop\\\\ceshi\\\\node_modules\\\\ts-loader\\\\dist\\\\index.js:110:19)\\n    at getLoaderOptions (C:\\\\Users\\\\Administrator\\\\Desktop\\\\ceshi\\\\node_modules\\\\ts-loader\\\\dist\\\\index.js:72:5)\\n    at Object.loader (C:\\\\Users\\\\Administrator\\\\Desktop\\\\ceshi\\\\node_modules\\\\ts-loader\\\\dist\\\\index.js:15:21)\")}]);","extractedComments":[]}